# Default values for stratum-work-webapp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: bboerst/stratum-work-webapp
  tag: ""
  pullPolicy: IfNotPresent

podmonitor:
  enabled: false
  labels: {}

updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 25%
    maxSurge: 25%

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

env:
  MONGODB_USERNAME: "mongoadmin"
  MONGODB_PASSWORD: "hunter1"
  MONGODB_HOSTS: "mongodb-0.mongodb-svc.mongodb.svc.cluster.local:27017,mongodb-1.mongodb-svc.mongodb.svc.cluster.local:27017/"
  CORS_ORIGINS: "http://127.0.0.1:8000,http://localhost:8000"

arguments: []

automountServiceAccountToken: false

configurationFiles:
  gunicorn.conf.py: |
    import gunicorn
    bind = '0.0.0.0:8000'
    workers = 1
    worker_class = 'eventlet'
    secure_scheme_headers = {'X-FORWARDED-PROTOCOL': 'ssl', 'X-FORWARDED-PROTO': 'https', 'X-FORWARDED-SSL': 'on'}
    forwarded_allow_ips = '*'
    keepalive = 65
    timeout = 300
    proc_name = 'stratum-work'
    loglevel = 'info'
    accesslog = '-'
    errorlog = '-'
    gunicorn.SERVER = 'undisclosed'

podSecurityContext:
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  runAsNonRoot: true
  runAsUser: 1000
  readOnlyRootFilesystem: true

service:
  enabled: true

  annotations: {}
  labels: {}
  ## Deprecated, instead simply do not provide a clusterIP value
  omitClusterIP: false
  # clusterIP: ""

  ## List of IP addresses at which the controller services are available
  ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
  ##
  externalIPs: []

  loadBalancerIP: ""
  loadBalancerSourceRanges: []

  ## Set external traffic policy to: "Local" to preserve source IP on
  ## providers supporting it
  ## Ref: https://kubernetes.io/docs/tutorials/services/source-ip/#source-ip-for-services-with-typeloadbalancer
  externalTrafficPolicy: ""

  # Must be either "None" or "ClientIP" if set. Kubernetes will default to "None".
  # Ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
  sessionAffinity: ""

  healthCheckNodePort: 0

  ports:
    flask: 8000

  type: ClusterIP

ingress:
  enabled: false
  # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
  # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
  # ingressClassName: nginx
  # Values can be templated
  annotations: {}
    # traefik.ingress.kubernetes.io/protocol: http
    # traefik.ingress.kubernetes.io/service.sticky.cookie: "true"
    # traefik.ingress.kubernetes.io/websocket: "true"
    # traefik.ingress.kubernetes.io/websocket-timeout: "300s"
  labels: {}
  path: /

  # pathType is only for k8s >= 1.1=
  pathType: Prefix

  hosts:
    - chart-example.local
  ## Extra paths to prepend to every host configuration. This is useful when working with annotation based services.
  extraPaths: []
  # - path: /*
  #   backend:
  #     serviceName: ssl-redirect
  #     servicePort: use-annotation
  ## Or for k8s > 1.19
  # - path: /*
  #   pathType: Prefix
  #   backend:
  #     service:
  #       name: ssl-redirect
  #       port:
  #         name: use-annotation

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

extraManifests: []
  # - |
  #   apiVersion: traefik.containo.us/v1alpha1
  #   kind: IngressRoute
  #   metadata:
  #     labels:
  #       {{ .Values.componentLabelKeyOverride | default "app.kubernetes.io/component" }}: stratum-work-webapp
  #     name: {{ template "stratum-work-webapp.fullname" . }}
  #   spec:
  #     entryPoints:
  #       - web
  #       - websecure
  #     routes:
  #       - middlewares:
  #         - name: rate-limiter
  #       - match: Host(`stratum.work`)
  #         kind: Rule
  #         services:
  #         - name: {{ template "stratum-work-webapp.fullname" . }}
  #           port: {{ .Values.service.ports.flask }}
