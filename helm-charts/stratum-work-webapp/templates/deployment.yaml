apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ template "stratum-work-webapp.fullname" . }}
    chart: {{ template "stratum-work-webapp.chart" . }}
    heritage: {{ .Release.Service }}
    {{ .Values.componentLabelKeyOverride | default "app.kubernetes.io/component" }}: stratum-work-webapp
    {{- if .Values.deploymentLabels }}
{{ toYaml .Values.deploymentLabels | indent 4 }}
    {{- end }}
  name: {{ template "stratum-work-webapp.fullname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: {{ .Values.updateStrategy.type }}
    {{- if eq .Values.updateStrategy.type "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.updateStrategy.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.updateStrategy.rollingUpdate.maxSurge }}
    {{- end }}
  selector:
    matchLabels:
      app: {{ template "stratum-work-webapp.fullname" . }}
    {{- if .Values.useComponentLabel }}
      {{ .Values.componentLabelKeyOverride | default "app.kubernetes.io/component" }}: stratum-work-webapp
    {{- end }}
  template:
    metadata:
      {{- if or .Values.podAnnotations .Values.podAnnotationConfigChecksum }}
      annotations:
      {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- if .Values.podAnnotationConfigChecksum }}
        checksum/config: {{ tpl (toYaml .Values) . | sha256sum }}
      {{- end }}
      {{- end }}
      labels:
        app: {{ template "stratum-work-webapp.fullname" . }}
        component: "{{ .Values.name }}"
        {{ .Values.componentLabelKeyOverride | default "app.kubernetes.io/component" }}: stratum-work-webapp
        {{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
        {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "stratum-work-webapp.serviceAccountName" . }}
      {{- if .Values.hostAliases }}
      hostAliases:
        {{- range .Values.hostAliases }}
        - hostnames:
          {{- range .hostnames }}
          - {{ . }}
          {{- end }}
          ip: {{ .ip }}
        {{- end }}
      {{- end }}
      automountServiceAccountToken: {{ .Values.automountServiceAccountToken }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: 10
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
          {{-  range .Values.arguments }}
            - {{ . }}
          {{ end }}
          env:
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          {{- range $key, $val := .Values.env }}
          - name: {{ $key }}
            value: {{ $val | quote }}
          {{- end }}
          ports:
            - name: "flask"
              containerPort: {{ .Values.service.ports.flask }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: worker-tmp
            mountPath: /tmp
          - name: config
            mountPath: /app/gunicorn.conf.py
            subPath: gunicorn.conf.py
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: worker-tmp
          emptyDir: {}
        - name: config
          configMap:
            name: {{ template "stratum-work-webapp.fullname" . }}-config